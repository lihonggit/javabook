<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>mateFscm</display-name>

	<!-- 加载jetbrick-template配置 -->
	<context-param>
		<param-name>jetbrick-template-config-location</param-name>
		<param-value>/WEB-INF/classes/resources/jetbrick-template.properties</param-value>
	</context-param>
	<!-- 加载spring配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/config/applicationContext-*.xml</param-value>
	</context-param>
	<!-- 加载log4j配置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/resources/log4j.properties</param-value>
	</context-param>

	<!-- jetbrick-template监听器 -->
	<listener>
		<listener-class>jetbrick.template.web.JetWebEngineLoader</listener-class>
	</listener>
	<!-- spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- log4j监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- request监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- Introspector缓存清除监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- 字符集过滤器 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>*</url-pattern>
	</filter-mapping>

	<!-- 登陆过滤器 -->
	<filter>
		<filter-name>loginFilter</filter-name>
		<filter-class>com.ekfans.pub.util.filters.LoginFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>loginFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- druid连接池 -->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<!-- 不需要监控的路径 -->
		<init-param>
			<param-name>exclusions</param-name>
			 
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
			 
		</init-param>
		 
		<init-param>
			 
			<param-name>profileEnable</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>sessionStatMaxCount</param-name>
			<param-value>1000</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		 
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 将HibernateSession开关控制配置在Filter，保证一个请求一个session，并对lazy提供支持 -->
	<filter>
		<filter-name>OpenSessionInView</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>
		</init-param>
		<!---必须配置,且必须为true(开启),因为OpenSessionInViewFilter 过滤器将 Hibernate Session 
			绑定到请求线程中，它将自动被 Spring 的事务管理器探测到 -->
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--必须配置,否则在service层调用dao方法时会出现在只读模式下(FlushMode.NEVER/MANUAL)写操作不被允许 的问题 -->
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>AUTO</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>OpenSessionInView</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--org.sitemesh.config.ConfigurableSiteMeshFilter -->
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.ekfans.pub.util.filters.SiteMeshFilter</filter-class>
		<init-param>
			<param-name>ignore</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>jetbirckFilter</filter-name>
		<filter-class>com.ekfans.pub.util.filters.JetBirckFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>jetbirckFilter</filter-name>
		<url-pattern>*.jetx</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<!-- URLRewrite过滤 -->
	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- druid监控界面进入链接Servlet -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<!-- 允许与拒绝查看数据库监控信息的IP地址 -->
		<!-- deny拒绝访问IP，allow允许访问IP 判断规则：deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。 
			如果allow没有配置或者为空，则允许所有访问 -->
		<!-- <init-param>  <param-name>allow</param-name>  <param-value>127.0.0.1,192.168.0.103,192.168.80.1,192.168.23.1</param-value>  
			</init-param> <init-param>  <param-name>deny</param-name> <param-value>192.168.0.116</param-value>  
			</init-param> -->
		<init-param>
			<!-- 允许清空统计数据 -->
			<param-name>resetEnable</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<!-- 用户名 -->
			<param-name>loginUsername</param-name>
			<param-value>admin</param-value>
		</init-param>
		<init-param>
			<!-- 密码 -->
			<param-name>loginPassword</param-name>
			<param-value>123456</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>AxisServlet</servlet-name>
		<servlet-class>org.apache.axis2.transport.http.AxisServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>

	<!-- spring mvc -->
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>com.ekfans.pub.util.servlet.InitServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/classes/config/applicationContext-mvc.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>

	<!-- 后台验证码生成器 -->
	<servlet>
		<servlet-name>security</servlet-name>
		<servlet-class>com.ekfans.pub.tools.security.SecurityServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>security</servlet-name>
		<url-pattern>/security/image</url-pattern>
	</servlet-mapping>

	<!-- 前台验证码生成器 -->
	<servlet>
		<servlet-name>webSecurity</servlet-name>
		<servlet-class>com.ekfans.pub.tools.security.WebSecurityServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>webSecurity</servlet-name>
		<url-pattern>/web/security/image</url-pattern>
	</servlet-mapping>

	<!-- HttpSession有效时间(30分钟) -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>/index.html</welcome-file>
	</welcome-file-list>
</web-app>
